- content_for :head do
  = javascript_include_tag 'admin/plugins/codemirror/codemirror', 'admin/plugins/wslide', 'admin/pages', 'admin/editable_elements'
  = stylesheet_link_tag 'admin/editable_elements'

= f.foldable_inputs :name => :information do

  = f.input :title

  - if not @page.index? and not @page.not_found?
    = f.input :parent_id, :as => :select, :collection => parent_pages_options, :include_blank => false

  = f.input :slug, :required => false, :hint => @page.slug.blank? ? '&nbsp;' : @page.url, :input_html => { :data_url => get_path_admin_pages_url, :disabled => @page.index? || @page.not_found? }, :wrapper_html => { :style => "#{'display: none' if @page.templatized?}" }

  = f.custom_input :templatized, :css => 'toggle' do
    = f.check_box :templatized

  = f.input :content_type_id, :as => :select, :collection => current_site.content_types.all.to_a, :include_blank => false, :wrapper_html => { :style => "#{'display: none' unless @page.templatized?}" }

  = f.custom_input :published, :css => 'toggle' do
    = f.check_box :published

  = f.input :cache_strategy, :as => :select, :collection => options_for_page_cache_strategy, :include_blank => false

#editable-elements
  - grouped_editable_elements = @page.editable_elements_grouped_by_blocks

  .nav
    - grouped_editable_elements.keys.each_with_index do |name, index|
      = link_to content_tag(:span, name.try(:humanize) || t('.default_block')), "#block-#{index}", :id => "block-nav-#{index}", :class => "#{'on' if index == 0}"
    .clear

  .wrapper
    %ul{ :id => "blocks" }
      - grouped_editable_elements.keys.each_with_index do |name, index|
        - elements = grouped_editable_elements[name]
        %li{ :id => "block-#{index}", :class => 'block', :style => "display: #{index == 0 ? 'block' : 'none' }" }
          %fieldset.inputs
            %ol
              - elements.each_with_index do |el, index|
                = f.fields_for 'editable_elements', el, :child_index => el._index do |g|
                  = g.input :content, :label => el.slug.humanize, :hint => el.hint

      /
      /
      / = f.fields_for :editable_elements do |g|
      /   %li
      /     = g.label :value, g.object.name, :style => "display:none"
      /     %code= g.text_area :value
      /     = g.hidden_field :name
      /     = g.hidden_field :slug
      /     = g.hidden_field :disabled, :class => 'disabled'

= f.foldable_inputs :name => :raw_template do
  = f.custom_input :value, :css => 'code full', :with_label => false do
    = f.label :raw_template
    %code{ :class => 'html' }
      = f.text_area :raw_template
    / .more
    /   = link_to t('admin.image_picker.link'), admin_theme_assets_path, :id => 'image-picker-link'